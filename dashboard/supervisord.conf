[unix_http_server]
file=/tmp/supervisor.sock   ; path to your socket file

[supervisord]
nodaemon=true
logfile=/var/log/supervisord/supervisord.log ; supervisord log file
logfile_maxbytes=50MB       ; maximum size of logfile before rotation
logfile_backups=10          ; number of backed up logfiles
loglevel=info               ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid ; pidfile location
nodaemon=false              ; run supervisord as a daemon
minfds=1024                 ; number of startup file descriptors
minprocs=200                ; number of process descriptors
user=root                   ; default user
childlogdir=/var/log/supervisord/            ; where child log files will live


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use unix:// schem for a unix sockets.


[include]

# Uncomment this line for celeryd for Python
;files=celeryd.conf

[program:celery]
; Set full path to celery program if using virtualenv
command=celery worker -A celery_main.celery --loglevel=INFO

directory=/usr/src/app
user=root
numprocs=1
stdout_logfile=/var/log/celery/worker.log
stderr_logfile=/var/log/celery/worker.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000

[program:celerybeat]
; Set full path to celery program if using virtualenv
command=celery beat -A celery_main.celery --loglevel=INFO

; remove the -A myapp argument if you are not using an app instance

directory=/usr/src/app
user=root
numprocs=1
stdout_logfile=/var/log/celery/beat.log
stderr_logfile=/var/log/celery/beat.log
autostart=true
autorestart=true
startsecs=10

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999

[program:uwsgi]
user=root
command=uwsgi --ini /usr/src/app/uwsgi.ini
autostart=true
autorestart=true
stderr_logfile = /sites/mywebsite/log/uwsgi/err.log
stdout_logfile = /sites/mywebsite/log/uwsgi/out.log